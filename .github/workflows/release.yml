name: release

on:
  push:
    tags:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    uses: ./.github/workflows/lint_test.yml

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-ver: [3.11]
        includes: 
          - os: macos-latest
            build_script: ./build_mac.sh
            zip_name: PlaySK-PianoRoll-Reader-Mac.x64.zip 
          - os: windows-latest
            build_script: ./build_win.bat
            zip_name: PlaySK-PianoRoll-Reader-Win.x64.zip 
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-ver }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-ver }}
        
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      
    - name: Install dependencies
      run: poetry install

    - name: Build cython code
      run:  pushd src/cis_decoder/; poetry run python setup.py build_ext --inplace; popd;

    - name: build binary
      run: ${{ matrix.build_script }}

    - name: Windows, collect binary and zip
      if: startsWith(matrix.os, "windows")
      run: Compress-Archive -Path "dist/PlaySK Piano Roll Reader/*","sample_scans/" -DestinationPath ${{ matrix.zip_name }}

    - name: Mac Arm/X64, collect binary and zip
      if: startsWith(matrix.os, "mac")
      run: |
        mkdir tozip \ 
        cp -pr dist/* tozip/ \
        cp -pr sample_scans tozip/ \
        zip -r -q ${{ matrix.zip_name }} tozip

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: ${{ matrix.zip_name }}